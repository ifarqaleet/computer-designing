There are two memory hierarchies, 

Hierarchal access, sequential access. 

In hierarchal we access one after another 
In sequential we access parallely 

In sequential we take less amount of time. 




-----
Cache inconsistency issues: 

Lets say data a=1 is being called again and again and hence it has many copies throughout the heirarchy. There is teh same replicated data in main, 
cache, secondary etc. In this situation if the value of a in cache changes (since cache is closest to the cpu) there is a need to change the value in 
main and other memories as well so that consistency is maintained. 

To maintain this, we have two concepts 
1. Write back 
2. Write through 

Write back means, making all the changes in the cache and in the end once we are done, updating it in the main. This is the best policy as it reducing 
number of main memory access ( remember that main mem acccess take a loooot of time) 

Write through basically means that as soon as the value in the cache changes, we must reflect the same change immediately in the main as well. This will lead to 
the number of main memory access 
