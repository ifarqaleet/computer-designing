with referece to the memory there are there three concepts - 
1) Cocst 2) Speed 3) Size 

There are various types of memories in a computer such as - registers, main memory, secondary memory, cache memory. 

Main memory - second largest (within computer)  (slowest but least expensive) 
Secondary - largest 
Cache memory - closet  to CPU 
Register - within a CPU (fastest and most expensive) 

CPU - generates only the logical address. 

We use locality of reference in most cases to ensure that we get the data early hand 


There are two types of locality of reference: 
1) Spatial - Take the required portion of memory to the cache (nearer) as it might be required
2) temporal - The portion that is in use repeatedly, so we give it prefence to push it closer. (LRU is used) 


Idea temporal:
"If you used something recently, you'll probably use it again soon."
Example (Code):
for (int i = 0; i < 5; i++) {
    sum = sum + arr[10];  // repeatedly accessing arr[10]
}
arr[10] is accessed again and again, so keeping it in cache avoids repeated memory fetches.
Real-life analogy:
Think of a coffee cup you keep on your desk because you drink coffee multiple times a day â€” you don't put it back in the cupboard every time.

Idea Spatial: 

Idea:
"If you use one memory address, you're likely to use nearby addresses soon."
Example (Code):
for (int i = 0; i < 5; i++) {
    sum = sum + arr[i];  // accessing arr[0], arr[1], arr[2]...
}
The program accesses consecutive array elements, which are stored next to each other in memory.
Real-life analogy:
If you're reading a book, you don't just read one word; you read the next words on the same page because they're nearby.




Mapping And its types: 
Direct, 
Associative 
Set associative 

(conti) 


mapping is all about how to keep the data from main memory to the cache 


Direct mapping: 

many to one mapping. Goes in series. Main memory is directly blocked to the cache. 

Location of the block in cache =  remainder of (block number/ number of lines in the cache) 

for example the block number is 5 and the number of cache lines is 4 then the location of the block in the cache will be 1 as the remains er is one 

Associative mapping: 

Many to many mapping. 

Better than direct mapping. Place at any available space - reduces conflict misses. But takes more time to find out the free spaces 
